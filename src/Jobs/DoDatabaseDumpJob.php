<?php

namespace MediaWiki\Extension\DumpsOnDemand\Jobs;

use Job;
use MediaWiki\Export\WikiExporterFactory;
use MediaWiki\Extension\DumpsOnDemand\Backend\FileBackend;
use WikiExporter;
use Wikimedia\Rdbms\IConnectionProvider;

/**
 * Job that creates database dumps.
 *
 * The following job parameters are required:
 *   - fullHistory: Indicates if this job should dump the full history
 *
 * The dumps generated by this job are equivalent to calling dumpBackup.php --full --uploads
 * and dumpBackup.php --current --uploads
 */
class DoDatabaseDumpJob extends Job {
	public const JOB_NAME = 'DatabaseDumpGeneration';

	private IConnectionProvider $dbProvider;

	private FileBackend $fileBackend;

	private WikiExporterFactory $wikiExporterFactory;

	/**
	 * @param array $params
	 * @param IConnectionProvider $dbProvider
	 * @param FileBackend $fileBackend
	 * @param WikiExporterFactory $wikiExporterFactory
	 */
	public function __construct(
		array $params,
		IConnectionProvider $dbProvider,
		FileBackend $fileBackend,
		WikiExporterFactory $wikiExporterFactory
	) {
		parent::__construct( self::JOB_NAME, $params );

		$this->dbProvider = $dbProvider;
		$this->fileBackend = $fileBackend;
		$this->wikiExporterFactory = $wikiExporterFactory;
	}

	/**
	 * @inheritDoc
	 * @return true
	 */
	public function run(): bool {
		$dbr = $this->dbProvider->getReplicaDatabase( false, 'dump' );
		$dbr->setSessionOptions( [ 'connTimeout' => 3600 ] );

		if ( $this->params['fullHistory'] ) {
			$file = $this->fileBackend->getAllRevisionsFilePath();
		} else {
			$file = $this->fileBackend->getCurrentRevisionsFilePath();
		}

		$exporter = $this->wikiExporterFactory->getWikiExporter(
			$dbr,
			$this->params['fullHistory'] ? WikiExporter::FULL : WikiExporter::CURRENT
		);
		$exporter->dumpUploads = true;
		$sink = $this->fileBackend->getOutputSink( $file );
		// Pass as variable because the argument is defined as a reference.
		$exporter->setOutputSink( $sink );

		$exporter->openStream();
		$exporter->allPages();
		$exporter->closeStream();

		return true;
	}
}
